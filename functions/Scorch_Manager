#
# Copyright 2015 WebMarcIT Ltd
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#    http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#


# function included
# fn_Manager   # Loop


fn_Manager()
{
  typeset local char_Choice=
  file_ScreenCache=$(mktemp "${dir_Tmp}"/cache.XXXXX)
  while : ; do
    # Use cache file
    #printf "."
    fn_ShowTop > "${file_ScreenCache}"
    #printf "."
    fn_ShowJobs superceeded failed warning running starting queued new completed >> "${file_ScreenCache}"
    #printf "."
    fn_ShowLine "=" >> "${file_ScreenCache}"
    #printf "."
    fn_DisplayMOTD >> "${file_ScreenCache}"
    #printf "."
    fn_ContextMenu >> "${file_ScreenCache}"
    #printf "."
    clear ; cat "${file_ScreenCache}"
    read -t 10 char_Choice
    #echo "."

    case ${char_Choice} in

      # Create a new job
      n | N ) "${dir_Base}"/${str_ProgramName} -new ;;

      # Job State transition
      d | D ) fn_Transition delete  ;;
      q | Q ) fn_Transition queue   ;;
      r | R ) fn_Transition resume  ;;
      u | U ) fn_Transition unqueue ;;

      # Misc
      m | M ) fn_EditMOTD           ;;
      t | T ) fn_ShowTasks          ;;
	  [0-9]* ) fn_AdminFunctions ${char_Choice} ;;
      
      
      x | X ) break ;;
    esac
	fn_RunJobs
  done
  rm "${file_ScreenCache}"
}

fn_AdminFunctions()
{
  echo "Stubbed for $1"
  typeset str_JobState=${arr_States[${1}]}
  typeset local file_Job=${dir_Job}/${str_JobState}/${arr_Jobs[${1}]}
  echo "${file_Job}"
  clear
  fn_ShowTop
  fn_ShowLine
  typeset local str_JobOwner=$(grep ^str_Owner "${file_Job}")
  echo " Job Owner : ${str_JobOwner}"
  fn_ShowLine "-" 
  ls -l "${file_Job}"
  fn_ShowLine "-" 
#echo Passing ${str_JobState}
  fn_ContextMenu  ${str_JobState}
    read char_Choice
    #echo "."

    case ${char_Choice} in

      # Create a new job
      e | E ) vi "${file_Job}" ;;

      # Job State transition
      d | D ) fn_Transition delete  ;;
      q | Q ) fn_Transition queue   ;;
      r | R ) fn_Transition resume  ;;
      u | U ) fn_Transition unqueue ;;

      # Misc
      #m | M ) fn_EditMOTD           ;;
      t | T ) fn_ShowTasks "${file_Job}"          ;;
	  [0-9]* ) fn_AdminFunctions ${char_Choice} ;;
      
      
      x | X ) break ;;
    esac
  sleep 5
}
